apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
  name: opentelemetry-demo-otelcol
  namespace: otel-demo
---
apiVersion: v1
data:
  relay: "connectors:
  spanmetrics: {}
exporters:
  debug: {}
  opensearch:

        http:
      endpoint: http://otel-demo-opensearch:9200
      tls:
   
         insecure: true
    logs_index: otel
  otlp:
    endpoint: 'opentelemetry-demo-jaeger-collector:4317'

        tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: http://opentelemetry-demo-prometheus-server:9090/api/v1/otlp

        tls:
      insecure: true
extensions:
  health_check:
    endpoint: ${env:MY_POD_IP}:13133

    processors:
  batch: {}
  k8sattributes:
    extract:
      metadata:
  
        - k8s.namespace.name
      - k8s.deployment.name
      - k8s.statefulset.name

          - k8s.daemonset.name
      - k8s.cronjob.name
      - k8s.job.name

          - k8s.node.name
      - k8s.pod.name
      - k8s.pod.uid
      - k8s.pod.start_time

        passthrough: false
    pod_association:
    - sources:
      - from: resource_attribute

            name: k8s.pod.ip
    - sources:
      - from: resource_attribute

            name: k8s.pod.uid
    - sources:
      - from: connection
  memory_limiter:

        check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage:
     25
  resource:
    attributes:
    - action: insert
      from_attribute:
     k8s.pod.uid
      key: service.instance.id
  transform:
    error_mode: ignore

        trace_statements:
    - context: span
      statements:
      - replace_pattern(name,
     "?.*", "")
      - replace_match(name, "GET /api/products/*", "
    GET /api/products/{productId}")
receivers:
  httpcheck/frontendproxy:
   
     targets:
    - endpoint: http://opentelemetry-demo-frontendproxy:8080
  jaeger:

        protocols:
      grpc:
        endpoint: ${env:MY_POD_IP}:14250
     
     thrift_compact:
        endpoint: ${env:MY_POD_IP}:6831
      thrift_http:

            endpoint: ${env:MY_POD_IP}:14268
  otlp:
    protocols:
      grpc:

            endpoint: ${env:MY_POD_IP}:4317
      http:
        cors:
       
       allowed_origins:
          - http://*
          - https://*
        endpoint:
     ${env:MY_POD_IP}:4318
  prometheus:
    config:
      scrape_configs:
 
         - job_name: opentelemetry-collector
        scrape_interval: 10s
    
        static_configs:
        - targets:
          - ${env:MY_POD_IP}:8888

      redis:
    collection_interval: 10s
    endpoint: valkey-cart:6379
  zipkin:

        endpoint: ${env:MY_POD_IP}:9411
service:
  extensions:
  - health_check

      pipelines:
    logs:
      exporters:
      - opensearch
      - debug

          processors:
      - k8sattributes
      - memory_limiter
      - resource

          - batch
      receivers:
      - otlp
    metrics:
      exporters:

          - otlphttp/prometheus
      - debug
      processors:
      - k8sattributes

          - memory_limiter
      - resource
      - batch
      receivers:
 
         - httpcheck/frontendproxy
      - redis
      - otlp
      - spanmetrics

        traces:
      exporters:
      - otlp
      - debug
      - spanmetrics

          processors:
      - k8sattributes
      - memory_limiter
      - resource

          - transform
      - batch
      receivers:
      - otlp
      - jaeger

          - zipkin
  telemetry:
    metrics:
      address: ${env:MY_POD_IP}:8888
"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
  name: opentelemetry-demo-otelcol
  namespace: otel-demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
  name: opentelemetry-demo-otelcol
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
  name: opentelemetry-demo-otelcol
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-demo-otelcol
subjects:
- kind: ServiceAccount
  name: opentelemetry-demo-otelcol
  namespace: otel-demo
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
    component: standalone-collector
  name: opentelemetry-demo-otelcol
  namespace: otel-demo
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: jaeger-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: jaeger-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: jaeger-thrift
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: metrics
    port: 8888
    protocol: TCP
    targetPort: 8888
  - appProtocol: grpc
    name: otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: prometheus
    port: 9464
    protocol: TCP
    targetPort: 9464
  - name: zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    component: standalone-collector
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/version: 0.113.0
  name: opentelemetry-demo-otelcol
  namespace: otel-demo
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: opentelemetry-demo
      app.kubernetes.io/name: otelcol
      component: standalone-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 2d923ab8c3aa2c63ec32fe4a7aa4993b12f3e03b2e255f1909b97f5e43b58226
        opentelemetry_community_demo: 'true'
        prometheus.io/port: '9464'
        prometheus.io/scrape: 'true'
      labels:
        app.kubernetes.io/instance: opentelemetry-demo
        app.kubernetes.io/name: otelcol
        component: standalone-collector
    spec:
      containers:
      - args:
        - --config=/conf/relay.yaml
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: GOMEMLIMIT
          value: 160MiB
        image: otel/opentelemetry-collector-contrib:0.113.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 13133
        name: opentelemetry-collector
        ports:
        - containerPort: 6831
          name: jaeger-compact
          protocol: UDP
        - containerPort: 14250
          name: jaeger-grpc
          protocol: TCP
        - containerPort: 14268
          name: jaeger-thrift
          protocol: TCP
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 4317
          name: otlp
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 9464
          name: prometheus
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 13133
        resources:
          limits:
            memory: 200Mi
        securityContext: {}
        volumeMounts:
        - mountPath: /conf
          name: opentelemetry-collector-configmap
      hostNetwork: false
      securityContext: {}
      serviceAccountName: opentelemetry-demo-otelcol
      volumes:
      - configMap:
          items:
          - key: relay
            path: relay.yaml
          name: opentelemetry-demo-otelcol
        name: opentelemetry-collector-configmap

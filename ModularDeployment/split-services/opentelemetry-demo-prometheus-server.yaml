apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
  namespace: otel-demo
---
apiVersion: v1
data:
  alerting_rules.yml: '{}

    '
  alerts: '{}

    '
  allow-snippet-annotations: 'false'
  prometheus.yml: "global:
  evaluation_interval: 30s
  scrape_interval: 5s
  scrape_timeout:
     3s
storage:
  tsdb:
    out_of_order_time_window: 30m
rule_files:
- /etc/config/recording_rules.yml

    - /etc/config/alerting_rules.yml
- /etc/config/rules
- /etc/config/alerts

    scrape_configs:
- honor_labels: true
  job_name: otel-collector
  kubernetes_sd_configs:

      - namespaces:
      own_namespace: true
    role: pod
  relabel_configs:

      - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_pod_annotation_opentelemetry_community_demo
"
  recording_rules.yml: '{}

    '
  rules: '{}

    '
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
  namespace: otel-demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
rules:
- apiGroups:
  - ''
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - ingresses
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-demo-prometheus-server
subjects:
- kind: ServiceAccount
  name: opentelemetry-demo-prometheus-server
  namespace: otel-demo
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
  namespace: otel-demo
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.55.1
  name: opentelemetry-demo-prometheus-server
  namespace: otel-demo
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: opentelemetry-demo
      app.kubernetes.io/name: prometheus
  strategy:
    rollingUpdate: null
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: opentelemetry-demo
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: prometheus
        app.kubernetes.io/version: v2.55.1
    spec:
      containers:
      - args:
        - --storage.tsdb.retention.time=15d
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --enable-feature=exemplar-storage
        - --enable-feature=otlp-write-receiver
        image: quay.io/prometheus/prometheus:v2.55.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: prometheus-server
        ports:
        - containerPort: 9090
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources:
          limits:
            memory: 300Mi
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
          subPath: ''
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: opentelemetry-demo-prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          name: opentelemetry-demo-prometheus-server
        name: config-volume
      - emptyDir: {}
        name: storage-volume
